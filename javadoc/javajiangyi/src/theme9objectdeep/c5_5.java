package theme9objectdeep;

import java.applet.Applet;

/**
 * @author wzn
 * @create 2022-07-24 14:22
 */

/**
 * 简单地说，多态是指一个同名的方法可以有不同的版本，调用这个方法时只是调用了该方法不同版本中的一个。
 * 多态性事项系统添加新的功能变得容易，使得调用者的调用格式趋于一致，是降低软件复杂性、提高软件易用性的有效技术。
 *这些方法同名的原因，是它们的最终功能和目的都相同，但是由于在完成同一功能时，
 * 可能遇到不同的具体情况，所以需要定义含不同的具体内容的方法，来代表多种具体实现形式。
 * 它是面向对象程序设计中的一个特性。其目的是为了提高程序的抽象度、封闭性和简洁性，统一一个或多个相关类对外的接口。
 *就像我们平时用的插头一样，虽然都叫做插头，但是有的是两插头的、有的是三插头的，
 * 有的是圆的，有的是扁的。这就要求我们设计不同的插板。
 *
 *在某些情况下，可能要在同一个类中写几种做同样工作但带有不同参数的方法。
 * 考虑一个简单方法，它试图输出参数的文本表示法。这种方法被称做println()。
 *现在假设打印每个 int，float，String 类型需要不同的打印方法。
 * 这是合情合理的，因为各种数据类型要求不同的格式，而且可能要求不同的处理。
 * 可以分别创建三种方法，即：printInt(),printfloat()和 printString()。
 * 但这是很乏味的。Java 与其它几种编程语言一样，允许对不止一种方法重用方法名称。
 * 清楚地说，只有当某种东西能区分实际上需要哪种方法并去调用它时，它才能起作用。
 * 在三种打印方法的情况下，可能在参数的数量和类型的基础上对此进行区分。
 *
 * 当写代码来调用这些方法中的一种方法时，根据提供的参数的类型选择合适的一种方法。
 * 调用语句的参数表必须有足够的不同，以至于允许区分出正确的方法被调用。
 * 正常的拓展晋升（如，单精度类型 float 到双精度类型 double）可能被应用，但是这样会导致在某些条件下的混淆。
 * 这重载的方法主要通过形式参数列表中参数的个数、参数的数据类型和参数的顺序等方面的不同来区分。
 * 方法的返回类型可以各不相同，但它不足以使返回类型变成唯一的差异。重载方法的参数表必须不同。
 */
public class c5_5 extends Applet {
    int add(int a,int b) {//重载的方法 1
        return(a+b);
    }
    double add(double x,double y) {//重载的方法 2
        return(x+y);
    }
    double add(double x,double y, double z) {//重载的方法 3
        return(x+y+z);
    }
    public void paint() {
        System.out.println("Sum is:"+add(8.5,2.3));
        System.out.println ("Sum is:"+add(21,38));
        System.out.println ("Sum is:"+add(8.5,2.3,8.5+2.3));
    }

    public static void main(String[] args) {
        c5_5 c5 = new c5_5();
        c5.paint();
    }
}

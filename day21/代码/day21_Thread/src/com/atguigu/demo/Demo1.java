package com.atguigu.demo;
/*
    此类用于演示  多线程
    多线程是一个非常重要的知识点，以后的服务器都是多线程的环境！淘宝、京东...
    为什么要学习多线程？(提高效率，"同时"服务多任务)
    概念：
        并发：高并发(太多的线程同时去访问服务器，导致服务器宕机)
            微博上一次宕机是什么事件？鹿晗和关晓彤官宣(大量的用户在同一段时间去访问微博的服务器)
            指两个或多个事件在"同一个时间段内"发生,
            张三和李四去饮水机接水，饮水机会随机挑一个人给一滴水(如果张三和李四的优先级是一样的话)
                他俩几乎同时接完水(饮水机同时为两个人完成接水的操作)   快速的交替
                那一个时间段（多长时间段）内多少个人去接水才会宕机呢？看你服务器的承受能力？
                    1万个人去接水，饮水机处理1万个请求，会花费很长时间，内存会越来越大，知道内存溢出，出现宕机
        并行：真的是同一时刻(多核的情况)
            张三一个水出口，李四一个水的出口
        程序： 用某种语言编写的一些有序指令的集合
        软件： 多个程序+资源构成软件
        进程： 应用程序的一次执行过程(开始--结束)，或者正在运行的程序(开始--)  内存会为其分配空间
        线程： 线程是进程中一个细小的单元(进程是由线程组成的，进程中最少会有一个线程)
    主要内容：java基础阶段学多线程的第一步   -->   JUC(线程高级)
        1. 线程调度(cpu调配多线程)
            a. 分时调度
                所有线程轮流使用 CPU 的使用权，平均分配每个线程占用 CPU 的时间。
            b. 抢占式调度(线程去cpu抢执行权[时间片])
                优先让优先级高的线程使用 CPU，如果线程的优先级相同，那么会随机选择一个(线程随机性)，
                    Java使用的为抢占式调度。
        2. java采用的是哪种线程调度---> 抢占式
        3. 之前所有的程序都是单线程的(main方法就是一个线程[主线程])
        4. 想让这个两个循环，"同时"运行(并发[交替的很快])
            需要让这个两个循环分别运行在两个线程中
        5. 创建线程的方式
            5.1 继承java.lang.Thread类
                a. 新建一个普通类
                b. 继承Thread类
                c. 重写run方法
                    run方法中就是线程运行的代码主体
               d. 如何启动线程？
                 ① 创建线程的对象(Thread类的对象及其子类对象)
                    PrintFor t=new PrintFor();
                 ② 调用线程对象的start方法
                     t.start();启动当前线程，真正运行的依然是run方法的内容
                        启动起来之后会立刻运行run方法的内容？不会，得抢
                        每个线程都有默认的优先级，抢到之后才会运行(线程的生命周期)
                         private native void start0();//本地方法，由C语言去写
                PS:不能将启动放在主线程的循环下面
                    是否可以在线程中开其他的线程！可以的
              5.2 实现Runnable接口
                a. 新建一个类
                b. 实现接口Runnable
                c. 实现抽象方法run方法
              5.3 callable第三种创建方式   JVM JUC讲解
              5.4 线程池      JUC讲解
       练习：
        创建一个子线程，打印1-100之间的偶数，main方法打印1-100之间的奇数，两个同时打印
 */
public class Demo1 {

    public static void main(String[] args) {
        //想让这个两个循环，"同时"运行(并发[交替的很快])
        //1. 创建线程对象
        PrintFor t=new PrintFor("aaa");
        //2. 启动线程
        t.start();

        /*PrintFor t1=new PrintFor();//现在区分不开t和t1,下午会有区分的讲解
        t1.start();*/
        PrintFor1 t1=new PrintFor1();//现在区分不开t和t1,下午会有区分的讲解
        t1.start();

        for (int i = 0; i < 100; i++) {
            System.out.println(i);
        }

    }
}
//其他包访问不到
class PrintFor extends Thread{
    public PrintFor(String name){
        super(name);//调用父类String类型参数的构造器
    }
    public PrintFor(){

    }
    @Override
    public void run() {
        for (int i = 0; i < 100; i++) {
            System.out.println("------------"+i);
        }
    }
}
class PrintFor1 extends Thread{
    @Override
    public void run() {
        for (int i = 0; i < 100; i++) {
            System.out.println("***************"+i);
        }
    }
}
